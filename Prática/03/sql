create tables:

    CREATE TABLE "orders" (
        "row_id" int NOT NULL unique,
        "order_id" varchar(10)   NOT NULL,
        "item_id" varchar(10)   NOT NULL,
        "created_at" timestamp   NOT NULL,
        "quantity" int   NOT NULL,
        "cust_id" int   NOT NULL,
        "delivery" boolean   NOT NULL,
        "add_id" int   NOT NULL,
        CONSTRAINT "pk_orders" PRIMARY KEY (
            "row_id"
        )
    );

    CREATE TABLE "customers" (
        "cust_id" int   NOT NULL unique,
        "cust_firstname" varchar(50)   NOT NULL,
        "cust_lastname" varchar(50)   NOT NULL,
        CONSTRAINT "pk_customers" PRIMARY KEY (
            "cust_id"
        )
    );

    CREATE TABLE "addresses" (
        "add_id" int   NOT NULL unique,
        "delivery_adress1" varchar(200)   NOT NULL,
        "delivery_adress2" varchar(200)   NULL,
        "delivery_city" varchar(50)   NOT NULL,
        "delivery_zipcode" varchar(20)   NOT NULL,
        CONSTRAINT "pk_addresses" PRIMARY KEY (
            "add_id"
        )
    );

    CREATE TABLE "items" (
        "item_id" varchar(10)   NOT NULL unique,
        "sku" varchar(20)   NOT NULL,
        "item_name" varchar(100)   NOT NULL,
        "item_cat" varchar(100)   NOT NULL,
        "item_size" varchar(10)   NOT NULL,
        "item_price" decimal(10,2)   NOT NULL,
        CONSTRAINT "pk_items" PRIMARY KEY (
            "item_id"
        )
    );

    CREATE TABLE "recipe" (
        "row_id" int   NOT NULL,
        "recipe_id" varchar(20)   NOT NULL,
        "ing_id" varchar(10)   NOT NULL,
        "quantity" int   NOT NULL,
        CONSTRAINT "pk_recipe" PRIMARY KEY (
            "row_id"
        )
    );

    CREATE TABLE "ingredient" (
        "ing_id" varchar(10)   NOT NULL unique,
        "ing_name" varchar(20)   NOT NULL,
        "ing_weight" int   NOT NULL,
        "ing_meas" varchar(20)   NOT NULL,
        "ing_price" decimal(5,2)   NOT NULL,
        CONSTRAINT "pk_ingedient" PRIMARY KEY (
            "ing_id"
        )
    );

    CREATE TABLE "inventory" (
        "inv_id" int   NOT NULL,
        "item_id" varchar(10)   NOT NULL,
        "quantity" int   NOT NULL,
        CONSTRAINT "pk_inventory" PRIMARY KEY (
            "inv_id"
        )
    );

    CREATE TABLE "staff" (
        "staff_id" varchar(20)   NOT NULL unique,
        "first_name" varchar(50)   NOT NULL,
        "last_name" varchar(50)   NOT NULL,
        "position" varchar(100)   NOT NULL,
        "hourly_rate" decimal(5,2)   NOT NULL,
        CONSTRAINT "pk_staff" PRIMARY KEY (
            "staff_id"
        )
    );

    CREATE TABLE "shift" (
        "shift_id" varchar(20)   NOT NULL unique,
        "day_of_week" varchar(10)   NOT NULL,
        "start_time" time   NOT NULL,
        "end_time" time   NOT NULL,
        CONSTRAINT "pk_shift" PRIMARY KEY (
            "shift_id"
        )
    );

    CREATE TABLE "rota" (
        "row_id" int   NOT NULL,
        "rota_id" varchar(20)   NOT NULL,
        "date" timestamp   NOT NULL,
        "shift_id" varchar(20)   NOT NULL,
        "staff_id" varchar(20)   NOT NULL,
        CONSTRAINT "pk_rota" PRIMARY KEY (
            "row_id"
        )
    );

    ALTER TABLE "customers" ADD CONSTRAINT "fk_customers_cust_id" FOREIGN KEY("cust_id")
    REFERENCES "orders" ("cust_id");

    ALTER TABLE "addresses" ADD CONSTRAINT "fk_addresses_add_id" FOREIGN KEY("add_id")
    REFERENCES "orders" ("add_id");

    ALTER TABLE "items" ADD CONSTRAINT "fk_items_item_id" FOREIGN KEY("item_id")
    REFERENCES "orders" ("item_id");

    ALTER TABLE "recipe" ADD CONSTRAINT "fk_recipe_recipe_id" FOREIGN KEY("recipe_id")
    REFERENCES "items" ("sku");

    ALTER TABLE "ingedient" ADD CONSTRAINT "fk_ingedient_ing_id" FOREIGN KEY("ing_id")
    REFERENCES "recipe" ("ing_id");

    ALTER TABLE "inventory" ADD CONSTRAINT "fk_inventory_item_id" FOREIGN KEY("item_id")
    REFERENCES "recipe" ("ing_id");

    ALTER TABLE "rota" ADD CONSTRAINT "fk_rota_date" FOREIGN KEY("date")
    REFERENCES "orders" ("created_at");

    ALTER TABLE "rota" ADD CONSTRAINT "fk_rota_shift_id" FOREIGN KEY("shift_id")
    REFERENCES "shift" ("shift_id");

    ALTER TABLE "rota" ADD CONSTRAINT "fk_rota_staff_id" FOREIGN KEY("staff_id")
    REFERENCES "staff" ("staff_id");



    insert into orders (row_id, order_id, item_id, created_at, quantity, cust_id, delivery, add_id)

    values

    (1, 'ord01', 'itm01', '09/01/2023 21:00:00', 1, 1,'Y', 1),
    (2, 'ord02', 'itm02', '09/01/2023 22:00:00', 1, 1,'Y', 2),
    (3, 'ord03', 'itm03', '09/01/2023 23:00:00', 2, 2,'Y', 3);

    insert into customers (cust_id, cust_firstname, cust_lastname)

    values

    (1, 'Alex', 'Smith'),
    (2, 'Lucas', 'Riffel');


    insert into addresses (add_id, delivery_adress1, delivery_adress2, delivery_city, delivery_zipcode)

    values

    (1, 'Rua', '', 'Crissiumal', '010101'),
    (2, 'Rua', '', 'Crissiumal', '020101'),
    (3, 'Vila', '', 'Crissiumal', '030101');


    insert into items (item_id, sku, item_name, item_cat, item_size, item_price)

    values

    ('itm01', 'PZZ-MARG-R', 'Margherita', 'Pizza', 'Regular', 12),
    ('itm02', 'PZZ-MARG-L', 'Margherita', 'Pizza', 'Large', 20),
    ('itm03', 'PZZ-PARM-R', 'Parmegiana', 'Pizza', 'Regular', 15);


    insert into recipe (row_id, recipe_id, ing_id, quantity)

    values

    (1, 'PZZ-MARG-R', 'ING01', 250),
    (2, 'PZZ-MARG-L', 'ING02', 150),
    (3, 'PZZ-PARM-R', 'ING03', 80);

    insert into ingredient (ing_id, ing_name, ing_weight, ing_meas, ing_price)

    values

    ('ING01', 'Tomato',2000, 'grams', 4.2),
    ('ING02', 'Onion',500, 'grams', 3),
    ('ING03', 'Oregano', 25, 'grams', 5.25);
    --(3, 'ord03', 'itm03', '09/01/2023 23:00:00', 2, 2,'Y', 3);

    insert into inventory (inv_id, item_id, quantity)

    values

    (1, 'ING01', 5),
    (2, 'ING02', 3),
    (3, 'ING03', 2);
    --(3, 'ord03', 'itm03', '09/01/2023 23:00:00', 2, 2,'Y', 3);


    insert into staff (staff_id, first_name, last_name, position, hourly_rate)

    values

    ('st01', 'Alex', 'Johnes', 'Chef', 15.25),
    ('st02', 'Carlos', 'Alberto', 'Head chef', 21.5),
    ('st03', 'Alex', 'Johnes', 'Delivery rider', 14.2);


    insert into shift (shift_id, day_of_week, start_time, end_time)

    values

    ('sh01', 'Monday', '10:30:00', '16:00:00'),
    ('sh02', 'Saturday', '18:30:00', '23:00:00'),
    ('sh03', 'Friday', '19:00:00', '24:00:00');

    insert into rota (row_id, rota_id, date, shift_id, staff_id)

    values

    (1, 'ro01', '09/01/2023', 'sh01', 'st01'),
    (2, 'ro01', '09/01/2023', 'sh02', 'st02'),
    (3, 'ro02', '09/01/2023', 'sh03', 'st03');



    select 
    o.order_id,
    i.item_price,
    o.quantity,
    i.item_cat,
    i.item_name,
    o.created_at,
    a.delivery_adress1,
    a.delivery_adress2,
    a.delivery_city,
    a.delivery_zipcode,
    o.delivery
    from orders o
    left join addresses a on
    a.add_id = o.add_id
    left join items i on
    i.item_id = o.item_id;

	select 
	s1.item_id,
	s1.ing_id,
	s1.ing_name,
	s1.ing_weight,
	s1.ing_price,
	s1.order_quantity,
	s1.recipe_quantity,
	s1.order_quantity*s1.recipe_quantity as ordered_weight,
	round(s1.ing_price/s1.ing_weight,2) as unit_cost,
	round((s1.order_quantity*s1.recipe_quantity) * (s1.ing_price/s1.ing_weight),2) as ingredient_cost
	from 
	(select 
	o.item_id,
	i.sku,
	i.item_name,
	r.ing_id,
	ing.ing_name,
	ing.ing_weight,
	ing.ing_price,
	r.quantity as recipe_quantity,
	sum(o.quantity) as order_quantity
	from orders o
	left join items i on i.item_id = o.item_id
	left join recipe r on r.recipe_id = i.sku
	left join ingredient ing on ing.ing_id = r.ing_id
	group by 1,2,3,4,5,6,7,8) s1;



    create view stock1 as     
	select 
	s1.item_id,
	s1.ing_id,
	s1.ing_name,
	s1.ing_weight,
	s1.ing_price,
	s1.order_quantity,
	s1.recipe_quantity,
	s1.order_quantity*s1.recipe_quantity as ordered_weight,
	round(s1.ing_price/s1.ing_weight,2) as unit_cost,
	round((s1.order_quantity*s1.recipe_quantity) * (s1.ing_price/s1.ing_weight),2) as ingredient_cost
	from 
	(select 
	o.item_id,
	i.sku,
	i.item_name,
	r.ing_id,
	ing.ing_name,
	ing.ing_weight,
	ing.ing_price,
	r.quantity as recipe_quantity,
	sum(o.quantity) as order_quantity
	from orders o
	left join items i on i.item_id = o.item_id
	left join recipe r on r.recipe_id = i.sku
	left join ingredient ing on ing.ing_id = r.ing_id
	group by 1,2,3,4,5,6,7,8) s1; 
	

    select 
	s2.ing_name,
	s2.ordered_weight,
	ing.ing_weight*inv.quantity as total_inv_weight,
	(ing.ing_weight*inv.quantity) - s2.ordered_weight as remaining_weight
	from(
	select 
	ing_id,
	ing_name,
	sum(ordered_weight) as ordered_weight
	from stock1
	group by ing_name, ing_id) as s2
	left join inventory inv on inv.item_id=s2.ing_id
	left join ingredient ing on ing.ing_id = s2.ing_id;
	

    select 
	r.date ,
	s.first_name,
	s.last_name,
	s.hourly_rate,
	sh.start_time,
	sh.end_time
	from rota r
	left join staff s on s.staff_id=r.staff_id
	left join shift sh on sh.shift_id=r.shift_id
	

    select 
	r.date ,
	s.first_name,
	s.last_name,
	s.hourly_rate,
	sh.start_time,
	sh.end_time,
	((EXTRACT(hour FROM(sh.end_time-sh.start_time))*60)+ (EXTRACT(minute FROM(sh.end_time-sh.start_time))))/60 AS hours_in_shift,
	((EXTRACT(hour FROM(sh.end_time-sh.start_time))*60)+ (EXTRACT(minute FROM(sh.end_time-sh.start_time))))/60 * s.hourly_rate as staff_cost
	from rota r
	left join staff s on s.staff_id=r.staff_id
	left join shift sh on sh.shift_id=r.shift_id
	
	